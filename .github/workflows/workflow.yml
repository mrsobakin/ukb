name: Build

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y \
            mingw-w64 build-essential pkg-config \
            ninja-build meson \
            libjson-c-dev libx11-dev \
            zip

      - name: Build (Linux)
        run: |
          meson setup build.linux \
            --prefix=/ \
            --libdir=/lib \
            --buildtype=release \
            --strip
          meson compile -C build.linux
          meson install -C build.linux --destdir=install

      - name: Build (Windows)
        run: |
          cat > mingw-cross.txt <<EOF
          [binaries]
          c = 'x86_64-w64-mingw32-gcc'
          cpp = 'x86_64-w64-mingw32-g++'
          ar = 'x86_64-w64-mingw32-ar'
          strip = 'x86_64-w64-mingw32-strip'
          pkg-config = 'x86_64-w64-mingw32-pkg-config'
          exe_wrapper = ''

          [host_machine]
          system = 'windows'
          cpu_family = 'x86_64'
          cpu = 'x86_64'
          endian = 'little'

          [built-in options]
          prefix = '/'
          EOF

          meson setup build.win \
            --cross-file mingw-cross.txt \
            --buildtype=release \
            --strip
          meson compile -C build.win
          meson install -C build.win --destdir=install

      - name: Package artifacts
        env:
          ARTIFACT_SUFFIX: ${{ startsWith(github.ref, 'refs/tags/v') && format('-{0}', github.ref_name) || '' }}
        run: |
          mkdir artifacts

          NAME="ukb-linux$ARTIFACT_SUFFIX"
          cd build.linux/install
          tar czf "../../artifacts/$NAME.tar.gz" *
          cd ../..

          NAME="ukb-windows$ARTIFACT_SUFFIX"
          cd build.win/install
          zip -r "../../artifacts/$NAME.zip" *
          cd ../..

      - name: Upload artifacts
        if: ${{ !startsWith(github.ref, 'refs/tags/v') }}
        uses: actions/upload-artifact@v4
        with:
          name: artifacts
          path: artifacts/*

      - name: Create Release
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        uses: ncipollo/release-action@v1.16.0
        with:
          generateReleaseNotes: true
          artifacts: "artifacts/*"
